/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package controlodecredencias;
import static controlodecredencias.ControlodeCredencias.dados;
import static controlodecredencias.ControlodeCredencias.fo;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.FlavorEvent;
import java.awt.datatransfer.FlavorListener;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.ActionEvent;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author João
 */
public class TabelaEntrada extends javax.swing.JFrame {
    private static boolean adicionar;
    private int numcol,numrow;
    /**
     * Creates new form TabelaEntrada
     */
    public TabelaEntrada(boolean adicionar) {
        this.adicionar = adicionar;
        numcol=4;
        numrow=1;
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent evt) {
                closeconfirm();
            }
        });
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1015, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 48)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        if(!adicionar)
        jLabel3.setText("Visualização das Credenciais");
        else
        jLabel3.setText("Inserção de Credenciais");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(159, 11, 711, 56);

        jTable2.setAutoCreateRowSorter(true);
        jTable2.putClientProperty("terminateEditOnFocusLost", Boolean.TRUE);
        String[] header;
        Object[][] tabela = new Object[1][5];
        if(!adicionar){
            jTable2.setEnabled(false);
            tabela = ShowCredenciais();
            header= new String[]{"Nº Credencial", "Nome", "Data", "Hora Partida", "Hora Chegada", "Viatura"};
            jTable2.setModel(new javax.swing.table.DefaultTableModel(tabela,header));
        }
        else{
            jTable2.setEnabled(true);
            ExcelAdapter myAd = new ExcelAdapter(jTable2);

            header = new String[]{"Nº Credencial", "Nome", "Data", "Hora Partida", "Viatura"};
            jTable2.setModel(new javax.swing.table.DefaultTableModel(tabela,header));

        }
        jTable2.setToolTipText("");
        jScrollPane2.setViewportView(jTable2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(50, 150, 926, 348);

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(897, 519, 74, 23);

        jLabel1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        if(adicionar)
        jLabel1.setText("Nº de Credenciais a Inserir");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(50, 80, 210, 29);

        String[] numerocredenciais = new String[60];
        for(int i=1;i<61;i++){
            if(i<10)
            numerocredenciais[i-1]="0"+i;
            else
            numerocredenciais[i-1]=String.format("%d",i);
        }
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(numerocredenciais));
        if(!adicionar)
        jComboBox1.setVisible(false);
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });
        getContentPane().add(jComboBox1);
        jComboBox1.setBounds(260, 80, 60, 30);

        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setText("Hora de Chegada");
        if(!adicionar)
        jCheckBox1.setVisible(false);
        jCheckBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCheckBox1ItemStateChanged(evt);
            }
        });
        jCheckBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jCheckBox1KeyPressed(evt);
            }
        });
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(50, 120, 130, 23);

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("Inserir");
        if(!adicionar)
        jButton2.setVisible(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(763, 520, 110, 23);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void closeconfirm(){
        int k=JOptionPane.showConfirmDialog(null,"Tem a certeza que deseja sair?");
        if(k==JOptionPane.YES_OPTION){
            System.exit(0);
        }
    }
    private Object[][] ShowCredenciais(){
        ArrayList<Credencial> credenciais = dados.getListaCredenciais();
        Object[][] tabela = new Object[credenciais.size()][6];
        int i;
        for(i=0;i<credenciais.size();i++){
            tabela[i][0]=String.valueOf(credenciais.get(i).getCodigo());
            tabela[i][1]=credenciais.get(i).getNome().toString();
            tabela[i][2]=credenciais.get(i).getDataPartida().toStringData();
            tabela[i][3]=credenciais.get(i).getDataPartida().toStringhoras();
            tabela[i][4]=credenciais.get(i).getDataChegada().toStringhoras();
            tabela[i][5]=String.valueOf(credenciais.get(i).getViatura().getNumero());
        }
        return tabela;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            this.dispose();
            JFrame menu = new Menu();
            menu.setVisible(true);
            menu.pack();
    }//GEN-LAST:event_jButton1ActionPerformed
    private void atualizatabela(){
        numrow = jComboBox1.getSelectedIndex()+1;
        String[] header = new String[]{"Nº Credencial", "Nome", "Data", "Hora Partida", "Viatura"};
        numcol=4;
        if(jCheckBox1.isSelected()){
            numcol=5;
            header = new String[]{"Nº Credencial", "Nome", "Data", "Hora Partida", "Hora Chegada", "Viatura"};

        }
        Object[][] tabela = new Object[numrow][numcol];
        jTable2.setModel(new javax.swing.table.DefaultTableModel(tabela,header));
        
    }
    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            atualizatabela();
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void jCheckBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox1ItemStateChanged
            atualizatabela();
    }//GEN-LAST:event_jCheckBox1ItemStateChanged

    private void jCheckBox1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox1KeyPressed
        int TeclaPressionada = evt.getKeyChar();
        if(TeclaPressionada == KeyEvent.VK_ENTER){
            jCheckBox1.doClick();
        }  
    }//GEN-LAST:event_jCheckBox1KeyPressed
    private long verificaCodigo(String codigo){
        long codigocredencial;
        try{
            codigocredencial = Long.parseLong(codigo);
        }
        catch(Exception e){
          //  JOptionPane.showMessageDialog(null,"O Número de Credencial apenas pode obter caracteres numéricos!");
            return -1;
        }
        ArrayList<Credencial> credenciais = dados.getListaCredenciais();
        for(int i=0;i<credenciais.size();i++){
            if(credenciais.get(i).getCodigo()==codigocredencial)
                return -1;
            if(credenciais.get(i).getCodigo()>codigocredencial)
                break;
        }
        return codigocredencial;
    }
    private void adicionaNome(String nome){
        ArrayList<String> listautentes = dados.getListaUtentes();
        int i=0;
        if(listautentes.size()>0){
            for(i=0;i<listautentes.size();i++){
                if(listautentes.get(i).equalsIgnoreCase(nome)){
                    return;
                }
                if(listautentes.get(i).compareToIgnoreCase(nome)>0)
                    break;
            }
        }
        listautentes.add(i,nome);
        dados.setListaUtentes(listautentes);
    }
    private boolean verificaNome(String nome){
       String[] words= nome.split("[^a-zA-Z ]+");
        if(nome.equals("null")||words.length>1){
            return false;
        }
        return true;
    }
    private Data verificaData(String data,String hora){
        String[] datanova = data.split("[^0-9]+");
        String[] horanova = hora.split(":");
        int dia,mes,ano,horas,minutos;
        if(datanova.length!=3 || horanova.length>3 || horanova.length<2)
            return null;
        try{
            dia = Integer.parseInt(datanova[0]);
            mes = Integer.parseInt(datanova[1]);
            ano = Integer.parseInt(datanova[2]);
            horas = Integer.parseInt(horanova[0]);
            minutos = Integer.parseInt(horanova[1]);
        }
        catch(Exception e){
            return null;
        }
        Data datafinal = new Data(dia,mes,ano,horas,minutos);
        datafinal.segurancaData(true);
        return datafinal;
    }
    private Viatura verificaViatura(String viatura){
        if(viatura.equals("null"))
            return null;
        int viaturanum;
        try{
            viaturanum = Integer.parseInt(viatura);
        }
        catch(Exception e){
            return null;
        }
        ArrayList<Viatura> listaviaturas = dados.getListaViaturas();
        int i=0;
        if(listaviaturas.size()>0){
            for(i=0;i<listaviaturas.size();i++){
               if(listaviaturas.get(i).getNumero()==viaturanum)
                   return listaviaturas.get(i);
               if(listaviaturas.get(i).getNumero()>viaturanum)
                   break;
            }
        }
        int k = JOptionPane.showConfirmDialog(null, "Deseja adicionar a viatura " + viatura + " na base de dados?");
        if(k==JOptionPane.YES_OPTION){
            listaviaturas.add(i,new Viatura(Integer.parseInt(viatura)));
            dados.setListaViaturas(listaviaturas);
            return listaviaturas.get(i);
        }
        return null;
        
        
    }
    private void adicionacredencialviatura(Viatura viatura,Credencial credencial){
        ArrayList<Credencial> listacredenciais = viatura.getListaCredenciais();
        int i=0;
        if(listacredenciais.size()>0){
            for(i=0;i<listacredenciais.size();i++){
                if(listacredenciais.get(i).getCodigo()>credencial.getCodigo()){
                    break;
                }
            }
        }
        listacredenciais.add(i,credencial);
        viatura.setListaCredenciais(listacredenciais);
        ArrayList<Viatura> listaviaturas = dados.getListaViaturas();
        for(int j=0;j<listaviaturas.size();j++){
            if(listaviaturas.get(j).getNumero()==viatura.getNumero()){
                listaviaturas.set(j,viatura);
                break;
            }
        }
        dados.setListaViaturas(listaviaturas);
    }
    private void adicionacredencial(long codigo,String nome,Data datapartida,Data datachegada,Viatura viatura){
        ArrayList<Credencial> listacredenciais = dados.getListaCredenciais();
        int i=0; 
        if(listacredenciais.size()>0){
            for(i=0;i<listacredenciais.size();i++){
                if(listacredenciais.get(i).getCodigo()>codigo)
                    break;
            }
        }
        listacredenciais.add(i,new Credencial(codigo,nome,datapartida,datachegada,viatura));
        adicionacredencialviatura(viatura,listacredenciais.get(i));
        dados.setListaCredenciais(listacredenciais);
    }
    private void gotoMenu(){
        this.dispose();
        JFrame menu =new Menu();
        menu.setVisible(true);
        menu.pack();
    }
    private void InsereCredenciais(){
        int j;
        String nome,codigo,data,horapartida,horachegada,viatura;
        long codigo2;
        Data datapartida,datachegada = null;
        int adicionado=0,total=0;
        Viatura viatura2;
        for(int i=0;i<numrow;i++){
            codigo = String.valueOf(jTable2.getModel().getValueAt(i,0));
            nome = String.valueOf(jTable2.getModel().getValueAt(i,1));
            data = String.valueOf(jTable2.getModel().getValueAt(i,2));
            horapartida = String.valueOf(jTable2.getModel().getValueAt(i,3));
            datapartida = verificaData(data,horapartida);
            if(jCheckBox1.isSelected()){
                horachegada = String.valueOf(jTable2.getModel().getValueAt(i,4));
                viatura = String.valueOf(jTable2.getModel().getValueAt(i,5));
                datachegada = verificaData(data,horachegada);
            }
            else{
                if(datapartida!=null){
                    datachegada = new Data(datapartida.getDia(),datapartida.getMes(),datapartida.getAno(),datapartida.getHoras()+3,datapartida.getMinutos());
                    datachegada.segurancaData(true);
                }
                else
                    datachegada=null;
                viatura = String.valueOf(jTable2.getModel().getValueAt(i,4));
            }
            codigo2 = verificaCodigo(codigo);
            viatura2 = verificaViatura(viatura);
            if(codigo2!=-1 && verificaNome(nome) && datapartida!=null && datachegada!=null && viatura2!=null){
                adicionacredencial(codigo2,nome,datapartida,datachegada,viatura2);
                adicionaNome(nome);
                adicionado++;
            }
            else if(codigo2==-1 && !verificaNome(nome) && datapartida==null && datachegada==null && viatura2==null){
                AtualizaFicheiros();
                JOptionPane.showMessageDialog(null,"Foram adicionadas " + adicionado + " credenciais num total de " + total+"!");
                gotoMenu();
                return;
            }

            total++;
        }
        AtualizaFicheiros();
        JOptionPane.showMessageDialog(null,"Foram adicionadas " + adicionado + " credenciais num total de " + total+"!");
        gotoMenu();
        return;
    }
    private void AtualizaFicheiros(){
        try{
            fo.abreEscrita("dados.bin");
            fo.escreveObjecto((BaseDados)dados);
            fo.fechaEscrita();
        }
        catch (Exception ex){         
            System.out.printf("Não foi possível escrever os dados no ficheiro! Exception found: %s\n",ex);
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        InsereCredenciais();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelaEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelaEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelaEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelaEntrada.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabelaEntrada(adicionar).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
